{"version":3,"sources":["create-account-form.tsx"],"names":[],"mappings":"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","file":"create-account-form.js","sourcesContent":["import { createAccountSchema } from '@/lib/validation';\nimport * as React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage} from '@/components/ui/form';\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from '../ui/button';\nimport PinInput from 'react-pin-input';\nimport * as z from \"zod\";\nimport {zodResolver} from \"@hookform/resolvers/zod\"\nimport axios from 'axios';\nimport { AccountResponse } from '@/types';\nimport { toast } from '@/components/ui/use-toast';\n\n\ninterface Props{\n  uid: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\nconst CreateAccountForm = ({ uid, setOpen}: Props) => {\n  const form = useForm<z.infer<typeof createAccountSchema>>({\n    resolver: zodResolver(createAccountSchema),\n    defaultValues: { name: \"\", pin: \"\" },\n  });\n  const { isSubmitting } = form.formState;\n  async function onSubmit(values: z.infer<typeof createAccountSchema>) {\n    try {\n      const { data } = await axios.post<AccountResponse>(\"/api/createAccount\", {...values, uid});\n      if(data.success) {\n        setOpen(false)\n        form.reset()\n        return toast({\n          title: \"Account created successfully\",\n          description: \"Your account has been created successfully\",\n        });\n      }\n    } catch (e) {\n      return toast({\n        title: \"Error\",\n        description: \"An error occurred while creating your account\",\n        variant: \"destructive\",\n      })\n    }\n  }\n  return (\n    <>\n      <h1 className=\"text-white text-center font-bold text-3xl\">\n        Create your account\n      </h1>\n      <div className=\"w-full h-[2px] bg-slate-500/20 mb-4 color-white\" />\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-3\">\n          <FormField\n            control={form.control}\n            name={\"name\"}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Name</FormLabel>\n                <FormControl>\n                  <Input\n                    {...field}\n                    autoComplete={\"off\"}\n                    className={\"h-[56px]\"}\n                    disabled={isSubmitting}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Your name is used identify your account.\n                </FormDescription>\n                <FormMessage className=\"text-red-600\" />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name={\"pin\"}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>PIN Code</FormLabel>\n                <FormControl>\n                  <PinInput\n                    length={4}\n                    initialValue={field.value}\n                    secret\n                    disabled={isSubmitting}\n                    secretDelay={100}\n                    onChange={(value) => field.onChange(value)}\n                    type=\"numeric\"\n                    inputMode=\"number\"\n                    style={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"repeat(4, 1fr)\",\n                      gap: \"10px\",\n                    }}\n                    inputStyle={{\n                      borderColor: \"RGBA(255, 255, 0.16)\",\n                      height: \"56px\",\n                      width: \"100%\",\n                      fontSize: \"40px\",\n                    }}\n                    inputFocusStyle={{ borderColor: \"RGBA(255, 255, 0.80\" }}\n                    autoSelect={true}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Your pin is used identify your account.\n                </FormDescription>\n                <FormMessage className=\"text-red-600\" />\n              </FormItem>\n            )}\n          />\n          <Button\n            className=\"w-full bg-red-600 hover:bg-red-700 flex justify-center items-center h-[56px] !text-white mt-4\"\n            disabled={isSubmitting}\n          >\n            Create account\n          </Button>\n        </form>\n      </Form>\n    </>\n  );\n};\n\nexport default CreateAccountForm;"]}